
import re


"""
正则表达式

作用：
    做字符串的匹配
    
re模块学习

'.'     默认匹配除\n之外的任意一个字符

'^'     匹配字符开头
'$'     匹配字符结尾

# 表示匹配的字符连续个数
'*'     匹配*号前的字符0次或多次     >=0
'+'     匹配前一个字符1次或多次      >=1
'?'     匹配前一个字符1次或0次        1 or 0
'{m}'   匹配前一个字符m次
'{n,m}' 匹配前一个字符n到m次
'{n,}'  匹配前一个字符n到无穷

'|'     匹配|左或|右的字符
'()'    分组匹配

'\d'    匹配数字0-9   =>[0-9]
'\D'    匹配非数字    =>[^0-9]
'\w'    匹配          =>[A-Za-z0-9]
'\W'    匹配非[A-Za-z0-9] =>[^A-Za-z0-9]
'\s'     匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]
'\S'     匹配任何非空白字符。等价于 [^ \f\n\r\t\v]
"""

######################################### 正则初识
info = """姓名        地区    身高    体重    电话
况咏蜜     北京    171    48    13651054608
王心颜     上海    169    46    13813234424
马纤羽     深圳    173    50    13744234523
乔亦菲     广州    172    52    15823423525
罗梦竹     北京    175    49    18623423421
刘诺涵     北京    170    48    18623423765
岳妮妮     深圳    177    54    18835324553
贺婉萱     深圳    174    52    18933434452
叶梓萱    上海     171    49    18042432324
杜姗姗   北京      167    49    13324523342"""

# 匹配手机号
# print(re.findall('\d{11}', info))

# for line in info.split('\n'):
#     print(line.split()[-1])


############################################ findall

# findall() 查找所有符合的  返回一个列表 如果匹配不到返回空列表
# nums = '119 2 3 456789   asd 123 fad213hj21h3j12'
# print(re.findall('\d{2,}', nums))
# print(re.findall('\d{2}', nums))


############################################### 练习

students = ' '.join(["冯亚尼", "曹泽涵", "张文哲", "曹怡", "张子涵",
            "李佳伦", "张灿武", "丁明宇", "张鱼洋", "郭利炜",
            "谷宣言", "彭子权", "屈晓明", "张家泽", "张丫丫",
            "高江涛", "尹梦许"])
# print(students)
# 匹配姓张的
# print(re.findall('张[\u4e00-\u9fa5]+', students))










































