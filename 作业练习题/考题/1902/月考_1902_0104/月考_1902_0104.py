



"""
第一题：
写一个类模仿进程池Pool的功能
"""

class PoolNew:

    def __init__(self):
        """
        初始化
        进程池的数量可选
        """
        pass

    def append(self):
        """
        添加任务
        :return:
        """
        pass

    def close(self):
        """
        关闭进程池
        阻塞主进程
        等待进程池所有任务完成
        :return:
        """
        pass


"""
第二题：
lst = [1, 2, 'abc', [], (), {}, 'cba', 3]
计算列表lst里面有多少种数据类型
"""


"""
第三题：
写一个函数，该函数接收一个参数nums，根据nums来控制打印的列表的数量
找规律打印相应的列表
n01 = [1]
n02 = [1, 1]
n03 = [1, 2, 1]
n04 = [1, 3, 3, 1]
n05 = [1, 4, 6, 4, 1]
n06 = [1, 5, 10, 10, 5, 1]
"""


"""
第四题：
解释下面三个高阶函数的用法，选其中一个模仿实现其功能
enumerate()
zip()
map()
"""


"""
第五题：
我的作品_打乱.txt 里面是被打乱的作品
需要最后整理成 我的作品_整理.txt 的样子
"""


"""
第六题：
列表nums里面每个数都不相同，从里面找出两个数相加结果跟target相等，
返回这两个数的索引值
nums = [1, 2, 3, 5, 8, 7, 9]
target = 16
result = (4, 5)
"""


"""
第七题：
读取score.csv文件（注意编码）
求每个学生四科成绩总分并从大到小进行排序
写入新的文件score_sorted.csv
"""


"""
第八题：
查看日志.txt文件
1、统计出访问频率最高的ip地址
2、并把他的访问记录写入一个新的文件 高频访问ip.txt
"""


"""
第九题：
写一个tcp协议的服务端，可以同时处理多个客户端的连接，
服务端只需要把接收的数据打印并把数据倒序发送回去
"""

